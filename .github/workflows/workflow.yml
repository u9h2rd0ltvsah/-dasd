name: Android Cloud Server Setup

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-android-server:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run Android Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        target: google_apis
        arch: x86
        ram-size: 8192M
        heap-size: 512M
        disk-size: 8G
        cores: 8
        emulator-options: -qemu -enable-kvm -cpu qemu64,-avx,-f16c
        script: |
          adb shell settings put global animator_duration_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global window_animation_scale 0.0

    - name: Install VNC and noVNC for smooth remote control
      run: |
        sudo apt-get update
        sudo apt-get install -y tightvncserver novnc websockify x11vnc

    - name: Set up VNC server
      run: |
        mkdir -p ~/.vnc
        echo "password" | vncpasswd -f > ~/.vnc/passwd
        chmod 600 ~/.vnc/passwd
        vncserver :1 -geometry 1280x720 -depth 24
        x11vnc -display :1 -forever -shared -rfbport 5901 &

    - name: Start noVNC web interface
      run: |
        websockify --web /usr/share/novnc 8080 localhost:5901 &
        sleep 5

    - name: Install Cloudflare Tunnel
      run: |
        wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
        sudo dpkg -i cloudflared-linux-amd64.deb

    - name: Authenticate and start Cloudflare Tunnel for VNC
      run: |
        cloudflared tunnel login --token ${{ secrets.CLOUDFLARE_TOKEN }}
        cloudflared tunnel create android-vnc || echo "Tunnel may already exist"
        cloudflared tunnel route dns android-vnc yourdomain.com
        cloudflared tunnel run android-vnc &
      env:
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

    - name: Keep workflow running
      run: |
        while true; do sleep 60; done
